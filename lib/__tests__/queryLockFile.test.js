"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const setupFixture_1 = require("../helpers/setupFixture");
const __1 = require("..");
/**
 * These tests rely on the "@microsoft/task-scheduler" package and its version as defined in package.json in
 * fixtures:
 * - monorepo-npm
 * - basic-yarn
 * - monorepo-pnpm
 *
 * If making any changes to those fixtures and "@microsoft/task-scheduler" dependency, update the `packageName` and
 * `packageVersion` constants.
 */
const packageName = "@microsoft/task-scheduler";
const packageVersion = "2.7.1";
describe("queryLockFile()", () => {
    // NPM
    it("retrieves a dependency from a lock generated by npm", async () => {
        const packageRoot = await (0, setupFixture_1.setupFixture)("monorepo-npm");
        const parsedLockFile = await (0, __1.parseLockFile)(packageRoot);
        const result = (0, __1.queryLockFile)(packageName, packageVersion, parsedLockFile);
        expect(result).toBeDefined();
        expect(result.version).toBe(packageVersion);
    });
    // Yarn
    it("retrieves a dependency from a lock generated by yarn", async () => {
        const packageRoot = await (0, setupFixture_1.setupFixture)("basic-yarn");
        const parsedLockFile = await (0, __1.parseLockFile)(packageRoot);
        // NOTE: Yarnâ€™s locks include ranges.
        const result = (0, __1.queryLockFile)(packageName, `^${packageVersion}`, parsedLockFile);
        expect(result).toBeDefined();
        expect(result.version).toBe(packageVersion);
    });
    // PNPM
    it("retrieves a dependency from a lock generated by pnpm", async () => {
        const packageRoot = await (0, setupFixture_1.setupFixture)("monorepo-pnpm");
        const parsedLockFile = await (0, __1.parseLockFile)(packageRoot);
        const result = (0, __1.queryLockFile)(packageName, packageVersion, parsedLockFile);
        expect(result).toBeDefined();
        expect(result.version).toBe(packageVersion);
    });
});
